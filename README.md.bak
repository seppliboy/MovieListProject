Writeup
- Why are we doing this?

This project has been a holistic application and demonstration of all of the skills we have learned throughout this course in a single application.
It demonstrates a proven ability to create a fully functioning back-end CRUD application along with required testing as well as experience with the
planning process including the principles of MoSCoW, user stories, risk assessments and Jira.
These are all valuable foundational skills and experience to have as a programmer or software developer and will prove useful in jobs in this field.

- How I expected the challenge to go

Planning - The planning concepts and tools we learnt were a relatively long time ago compared to the more recent Java topics we covered so I expected to have to 
go over some of the concepts or reacquaint myself with the use of Jira. 

Model, Service, Controller etc. - I felt comfortable with the vast majority of the topics we had covered during the course, helped by knowledgeable and helpful trainers. To me it was simply
applying all of the skills we had learned in a single application and understanding how the different classes and applications connect and operate as a single CRUD application.

Testing -  Testing was simple in concept but application was slightly more difficult so I thought I might struggle with some of the syntax and logic of the more complex tests.

Stretch Goals - I planned to at least attempt the stretch goals and incorporate the ones I felt comfortable with into my project. I expected these to be difficult by nature and take more time than other parts of the process. 

- What went well? / What didn't go as planned?

Planning - Planning was a simple process and helped me visualise all the things I needed to do in order to reach a MVP as well as some of the possible stretch goals. Everything went as planned. 

Model, Service, Controller etc.- Like I anticipated this was a fairly simple process and I encountered relatively few bugs and roadblocks. However this part of the process was the most time consuming by nature, more so than I had anticipated so I had to dedicate more time towards it than I initially thought, however this ultimately had little impact on the project and my time management. 

Testing - I found the basic tests that we had previously covered fairly simple to apply to my project. However there were tests for some methods that we did not cover so I had to do some research and experimentation to get those working. 

Stretch Goals - The stretch goals were complex as I had anticipated. I read over all of them and tried to apply those that I felt comfortable with. I successfully applied custom queries to my application and managed to create methods to test all of these custom queries. I also found integrating Lombok into my application fairly simple as well as achieving 80% test coverage. I believe I could have integrated DTOs and custom exceptions however due to time constraints and focusing on other stretch goals I decided to not include these in my project.

- Possible improvements for future revisions of the project

I am overall very happy with my project and think my time management allowed me to complete everything to achieve a MVP with plenty of time to spare. If I were to do this again I think with more experience now I would be able to complete the MVP in much less time which would allow me more time to focus on stretch goals and not have to exclude some due to time constraints.


- Screenshots showing your postman requests and the output from the API

Link to album (if direct links donâ€™t work) - https://imgur.com/gallery/jpELCfC

Create - https://i.imgur.com/esMvYJM.png
Reponse - https://i.imgur.com/RFaRdgs.png 

Get All - https://i.imgur.com/ViA7dCj.png
Get By Id - https://i.imgur.com/RNl3NEE.png

Update by Id - https://i.imgur.com/qpaMvxL.png
Response - https://i.imgur.com/rCeajO3.png

Delete All - https://i.imgur.com/TmrSHzI.png
Delete By Id - https://i.imgur.com/xGcBXnr.png

Custom Queries
Get By Title - https://i.imgur.com/JCgatez.png
Get By Title Asc - https://i.imgur.com/RW0sm5M.png
Get By Title Desc - https://i.imgur.com/5A2eC7a.png

Get By Genre - https://i.imgur.com/pQj2V6L.png
Get By Genre Asc - https://i.imgur.com/pQj2V6L.png
Get By Genre Desc - https://i.imgur.com/TmAa6e3.png

Get By Running Time - https://i.imgur.com/iBdlBRC.png
Get By Running Time Asc - https://i.imgur.com/iBdlBRC.png
Get By Running Time Desc - https://i.imgur.com/cOagRH4.png
Get By Running Time Greater Than - https://i.imgur.com/ULNBQZv.png
Get By Running Time Less Than - https://i.imgur.com/SajG3iM.png

Get By Release Year - https://i.imgur.com/pPUidYA.png
Get By Release Year Asc - https://i.imgur.com/T2S5Rwi.png
Get By Release Year Desc - https://i.imgur.com/V1hJAGD.png
Get By Release Year Greater Than - https://i.imgur.com/qF8bRBh.png
Get By Release Year Less Than - https://i.imgur.com/BpsLjJf.png

Get By Watched (true/false) - https://i.imgur.com/6u79WcT.png

- Screenshots of your database to prove that data is being persisted

Create entry adds entry to database with Id of 1  -  https://i.imgur.com/pvsOjLi.png
Update by Id 1 (retains Id of 1 with updated information) - https://i.imgur.com/OWWJFRu.png
Delete All or By Id removes from database - https://i.imgur.com/imADffj.png


- Screenshot of your test results, including coverage report

Controller class with coverage -
https://i.imgur.com/eLFfZAg.png
https://i.imgur.com/IuSbzyW.png
https://i.imgur.com/r5TIUa9.png

Services class with coverage - 
https://i.imgur.com/rGwQZ45.png
https://i.imgur.com/XBw0hXi.png
https://i.imgur.com/yJp5kFj.png

Coverage window - https://i.imgur.com/OWWJFRu.png

JUnit Window - https://i.imgur.com/PFj8tJF.png


- Link to Jira Board - You must add your trainer(s) as collaborators also

Jira Board Link (added Reece invited as collaborator) - 

https://joejarrett.atlassian.net/jira/software/projects/MLP/boards/2
